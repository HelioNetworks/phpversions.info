<?php

declare(strict_types=1);

namespace App\Repositories;

use App\Models\Vulnerability;
use Illuminate\Pagination\LengthAwarePaginator;

class VulnerabilityRepository implements Storable
{
    /** @var Vulnerability */
    private $vulnerability;

    public function __construct(Vulnerability $vulnerability)
    {
        $this->vulnerability = $vulnerability;
    }

    public function get() : LengthAwarePaginator
    {
        return $this->vulnerability->orderBy('cve_id', 'desc')->paginate();
    }

    public function fetch(int $id)
    {
        // TODO: Implement fetch() method.
    }

    public function create($object) : bool
    {
        $vulnerability = new Vulnerability();
        $vulnerability->setCveId($object['cveid']);
        $vulnerability->setRisk((int) $object['threat']);
        $vulnerability->setSummary($object['summary']);
        $vulnerability->setVersions(implode(', ', $object['fixVersions']['base']));

        return $vulnerability->save();
    }

    public function edit(object $object)
    {
        $threat = $this->vulnerability->byCveId($object['cveid'])->get();

    }

    public function destroy(int $id)
    {
        // TODO: Implement destroy() method.
    }

    public function findByVersion()
    {

    }
}